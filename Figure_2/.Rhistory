#install.packages('ggplot2', dependencies = TRUE)
library(sunburstR)
library(openxlsx)
library(RColorBrewer)
library(tidyverse)
library(vegan)
library(here)
library(ggrepel)
library(ggpubr)
library(scales)
library(dplyr)
library(patchwork)
library(plotly)
library(ggplot2)
#library(ggh4x)
source("colors.R") #source colors
sessionInfo()
here()
results <- paste(Sys.Date(), "Figure 2_heatmap", sep = "_")
dir.create(here(results), showWarnings = TRUE)
## Import RF colonization models importance per feature
importance_rf = read_csv(here("Imp_vars_models_colonization_2023-08-18.csv"))
## Import RF colonization models validation AUC
auc_rf = read_csv(here("Performance_colonization_2023-08-18.csv")) %>% select(Species, dataset, mean) %>%
rename(mean_AUC = mean)
auc_thresh <- 0.5
imp_rf <- importance_rf %>% left_join(auc_rf, by = c("Species", "dataset") ) %>%
filter(mean_AUC > auc_thresh | mean_AUC == auc_thresh) %>%
select(-variable) %>%
mutate(variable = clean_names_cyto)
imp_rf$dataset <- str_replace_all(imp_rf$dataset, "Mic_", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "_Screening", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Abx.group", "Use of Vanco")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "N days of most recent Abx", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "days_on_study_ABX_pre_screen", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "total_pre_screen_dose", "Dose pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_pretreatment_events", "N rounds of Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_washout_days", "N washout days")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "total_abx_days_prescreen", "N days of pre-study Abx (month prior)")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "abx_screen_status", "Total days of Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Total Days of Abx", "N days of pre-study Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "treat day len abx", "N days of on-study Abx")
my_patterns <-  c("Abx", "abx", "Age", "BMI" , "Vanco", "total recurrences", "washout" )
ord1 <- c( "Cytokines","BA" ,"SCFA","Species","Genus", "Order",  "Class" ,"Clinical factor" )
ord2 <- c("Clinical factor" , "Class" , "Order" ,"Genus","Species" ,"SCFA","BA", "Cytokines")
imp_rf <- imp_rf %>%
mutate(dataset_factor = factor(if_else(grepl( paste(my_patterns, collapse='|'), variable), "Clinical factor", dataset ), levels = ord1  ) ) %>%  arrange(dataset_factor) %>%
group_by(Species, variable) %>%
filter(mean_AUC == max(mean_AUC)) %>%
ungroup() %>%
filter(Freq > 0.2) %>%
mutate(variable = fct_inorder(factor(variable, ordered=TRUE))) %>%
mutate(Freq_sgn = (if_else( (mean_diff < 0) , -1*Freq, Freq ) ) )  %>%
filter(!grepl("mycetes", clean_names)) %>%
filter(!grepl("VE303", clean_names)) %>%
filter(!grepl("uncl", clean_names))
imp_rf <- imp_rf %>%
mutate(variable = if_else(dataset_factor == "Cytokines",
str_replace_all(imp_rf$variable, " ", "-") ,
str_replace_all(imp_rf$variable, "_", " ") ) ) %>% filter(variable != "G-CSF")
imp_rf$variable <- str_replace_all(imp_rf$variable, "TGF-b", "TGF-\u03B2")
imp_rf$variable <- str_replace_all(imp_rf$variable, "MIP-1d", "MIP-1\u03B4")
Encoding(imp_rf$variable) <- "UTF-8"
imp_rf %>% filter(dataset == "Cytokines")
textsize = 12
ggp <- ggplot(imp_rf, aes(variable,Species, fill = Freq_sgn, group = dataset_factor, color = dir )) +
theme_classic() +                               # Create heatmap with ggplot2
geom_tile(color = "black",
lwd = 0.2,
linetype = 1) +
scale_fill_gradient2(low = "indianred2",mid = "white" , high = "cyan3", midpoint = 0)   +
theme(axis.text.x = element_text(size = 13, angle = 90, hjust = 1, vjust = 0.1),
axis.title.x = element_text(size = textsize ),
plot.title = element_text(size = textsize ),
axis.text.y = element_text(size = 12, hjust = 1, vjust =0.5) ,
axis.title.y = element_text(size = textsize, hjust = 0.5, vjust = 1),
panel.background = element_rect(colour = "black", size=0.2, fill=NA))
#+   coord_fixed()
ggsave(filename = here(results, paste(Sys.Date(),  "AUC =" ,auc_thresh,
"RF Colonization  heatmap horiz.pdf",
sep = " ")), width = 15, height = 6)
#################
textsize = 16
ggp <- ggplot(imp_rf , aes(Species, variable,fill = Freq_sgn, group = dataset_factor, color = dir )) +
theme_classic() +                               # Create heatmap with ggplot2
geom_tile(color = "black",
lwd = 0.2,
linetype = 1) +
scale_fill_gradient2(low = "indianred2",mid = "white" , high = "cyan3", midpoint = 0)   +
theme(axis.text.x = element_text(size = 16,hjust = 1, vjust = 1,  angle = 45),
axis.title.x = element_text(size = textsize +3 ),
plot.title = element_text(size = textsize ),
axis.text.y = element_text(size = 16, hjust = 1, vjust =0.5) ,
axis.title.y = element_text(size = textsize+3, hjust = 0.5, vjust = 1),
strip.text.y = element_blank(),
legend.title = element_text(size = 13),
panel.background = element_rect(colour = "black", size=0.2, fill=NA)) +
facet_grid(rows = vars(imp_rf$dataset_factor),  scales = "free", space = "free_y") +
#  facet_grid(rows = vars(imp_rf$dataset_factor),
#             cols = vars(imp_rf$Species),  scales = "free", space = "free_y") +
scale_x_discrete(expand = expansion(add = c(0,0))) +
scale_y_discrete(expand = expansion(add = c(0,0))) +
labs(y="", x="Strain ID" , fill="Relation" )
#+   coord_fixed()
ggsave(filename = here(results, paste(Sys.Date(), "AUC =" ,auc_thresh,
"RF Colonization  heatmap vert.png",
sep = " ")), width = 12, height = 14.5, dpi = 800)
# ggsave(filename = here(results, paste(Sys.Date(), "AUC =" ,auc_thresh,
#                                        "RF Colonization  heatmap vert.png",
#                                      sep = " ")), width = 11, height = 11.5, dpi = 800)
textanno <-  c("Clinical factors" , "Class" , "Order" ,"Genus","Species" ,"SCFA","Bile Acids", "Cytokines")
#install.packages('ggplot2', dependencies = TRUE)
library(sunburstR)
library(openxlsx)
library(RColorBrewer)
library(tidyverse)
library(vegan)
library(here)
library(ggrepel)
library(ggpubr)
library(scales)
library(dplyr)
library(patchwork)
library(plotly)
library(ggplot2)
#library(ggh4x)
source("colors.R") #source colors
sessionInfo()
here()
sessionInfo()
here()
results <- paste(Sys.Date(), "Figure 3 sunburst_heatmap", sep = "_")
dir.create(here(results), showWarnings = TRUE)
## Import RF colonization models importance per feature
importance_rf = read_csv(here("Imp_vars_models_colonization_2023-08-18.csv"))
## Import RF colonization models validation AUC
auc_rf = read_csv(here("Performance_colonization_2023-08-18.csv")) %>% select(Species, dataset, mean) %>%
rename(mean_AUC = mean)
auc_thresh <- 0.5
imp_rf <- importance_rf %>% left_join(auc_rf, by = c("Species", "dataset") ) %>%
filter(mean_AUC > auc_thresh | mean_AUC == auc_thresh) %>%
select(-variable) %>%
mutate(variable = clean_names_cyto)
#imp_rf$Species <- str_replace_all(imp_rf$Species, "VE303-", "VE303.")
imp_rf$dataset <- str_replace_all(imp_rf$dataset, "Mic_", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "_Screening", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Abx.group", "Use of Vanco")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "N days of most recent Abx", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "days_on_study_ABX_pre_screen", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "total_pre_screen_dose", "Dose pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_pretreatment_events", "N rounds of non-CDI Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_washout_days", "N washout days")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "total_abx_days_prescreen", "N days of pre-study Abx (month prior)")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "abx_screen_status", "Total days of Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Total Days of Abx", "N days of non-CDI Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "treat day len abx", "N days of SoC CDI Abx")
my_patterns <-  c("Abx", "abx", "Age", "BMI" , "Vanco", "total recurrences", "washout" )
ord1 <- c( "Cytokines","BA" ,"SCFA","Species","Genus", "Order",  "Class" ,"Clinical factor" )
ord2 <- c("Clinical factor" , "Class" , "Order" ,"Genus","Species" ,"SCFA","BA", "Cytokines")
imp_rf <- imp_rf %>%
mutate(dataset_factor = factor(if_else(grepl( paste(my_patterns, collapse='|'), variable), "Clinical factor", dataset ), levels = ord1  ) ) %>%  arrange(dataset_factor) %>%
group_by(Species, variable) %>%
filter(mean_AUC == max(mean_AUC)) %>%
ungroup() %>%
filter(Freq > 0.2) %>%
mutate(variable = fct_inorder(factor(variable, ordered=TRUE))) %>%
mutate(Freq_sgn = (if_else( (mean_diff < 0) , -1*Freq, Freq ) ) )  %>%
filter(!grepl("mycetes", clean_names)) %>%
filter(!grepl("VE303", clean_names)) %>%
filter(!grepl("uncl", clean_names))
imp_rf <- imp_rf %>%
mutate(variable = if_else(dataset_factor == "Cytokines",
str_replace_all(imp_rf$variable, " ", "-") ,
str_replace_all(imp_rf$variable, "_", " ") ) ) %>% filter(variable != "G-CSF")
imp_rf$variable <- str_replace_all(imp_rf$variable, "TGF-b", "TGF-\u03B2")
imp_rf$variable <- str_replace_all(imp_rf$variable, "MIP-1d", "MIP-1\u03B4")
Encoding(imp_rf$variable) <- "UTF-8"
imp_rf %>% filter(dataset == "Cytokines")
textsize = 12
ggp <- ggplot(imp_rf, aes(variable,Species, fill = Freq_sgn, group = dataset_factor, color = dir )) +
theme_classic() +                               # Create heatmap with ggplot2
geom_tile(color = "black",
lwd = 0.2,
linetype = 1) +
scale_fill_gradient2(low = "indianred2",mid = "white" , high = "cyan3", midpoint = 0)   +
theme(axis.text.x = element_text(size = 13, angle = 90, hjust = 1, vjust = 0.1),
axis.title.x = element_text(size = textsize ),
plot.title = element_text(size = textsize ),
axis.text.y = element_text(size = 12, hjust = 1, vjust =0.5) ,
axis.title.y = element_text(size = textsize, hjust = 0.5, vjust = 1),
panel.background = element_rect(colour = "black", size=0.2, fill=NA))
#+   coord_fixed()
ggsave(filename = here(results, paste(Sys.Date(),  "AUC =" ,auc_thresh,
"RF Colonization  heatmap horiz.pdf",
sep = " ")), width = 15, height = 6)
#################
textsize = 16
ggp <- ggplot(imp_rf , aes(Species, variable,fill = Freq_sgn, group = dataset_factor, color = dir )) +
theme_classic() +                               # Create heatmap with ggplot2
geom_tile(color = "black",
lwd = 0.2,
linetype = 1) +
scale_fill_gradient2(low = "indianred2",mid = "white" , high = "cyan3", midpoint = 0)   +
theme(axis.text.x = element_text(size = 16,hjust = 1, vjust = 1,  angle = 45),
axis.title.x = element_text(size = textsize +3 ),
plot.title = element_text(size = textsize ),
axis.text.y = element_text(size = 16, hjust = 1, vjust =0.5) ,
axis.title.y = element_text(size = textsize+3, hjust = 0.5, vjust = 1),
strip.text.y = element_blank(),
legend.title = element_text(size = 13),
panel.background = element_rect(colour = "black", size=0.2, fill=NA)) +
facet_grid(rows = vars(imp_rf$dataset_factor),  scales = "free", space = "free_y") +
#  facet_grid(rows = vars(imp_rf$dataset_factor),
#             cols = vars(imp_rf$Species),  scales = "free", space = "free_y") +
scale_x_discrete(expand = expansion(add = c(0,0))) +
scale_y_discrete(expand = expansion(add = c(0,0))) +
labs(y="", x="Strain ID" , fill="Relation" )
#+   coord_fixed()
ggsave(filename = here(results, paste(Sys.Date(), "AUC =" ,auc_thresh,
"RF Colonization  heatmap vert.png",
sep = " ")), width = 12, height = 14.5, dpi = 800)
# ggsave(filename = here(results, paste(Sys.Date(), "AUC =" ,auc_thresh,
#                                        "RF Colonization  heatmap vert.png",
#                                      sep = " ")), width = 11, height = 11.5, dpi = 800)
textanno <-  c("Clinical factors" , "Class" , "Order" ,"Genus","Species" ,"SCFA","Bile Acids", "Cytokines")
imp_rf <- imp_rf %>%
select(Species, dataset, variable, Freq) %>%
mutate(
path = paste(Species, dataset, variable,sep = "-")
) %>%
slice(2:100) %>%
mutate( V2 = Freq )
imp_rf
results <- paste(Sys.Date(), "Figure 3 sunburst_heatmap", sep = "_")
dir.create(here(results), showWarnings = TRUE)
## Import RF colonization models importance per feature
importance_rf = read_csv(here("Imp_vars_models_colonization_2023-08-18.csv"))
## Import RF colonization models validation AUC
auc_rf = read_csv(here("Performance_colonization_2023-08-18.csv")) %>% select(Species, dataset, mean) %>%
rename(mean_AUC = mean)
auc_thresh <- 0.5
imp_rf <- importance_rf %>% left_join(auc_rf, by = c("Species", "dataset") ) %>%
filter(mean_AUC > auc_thresh | mean_AUC == auc_thresh) %>%
select(-variable) %>%
mutate(variable = clean_names_cyto)
#imp_rf$Species <- str_replace_all(imp_rf$Species, "VE303-", "VE303.")
imp_rf$dataset <- str_replace_all(imp_rf$dataset, "Mic_", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "_Screening", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Abx.group", "Use of Vanco")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "N days of most recent Abx", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "days_on_study_ABX_pre_screen", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "total_pre_screen_dose", "Dose pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_pretreatment_events", "N rounds of non-CDI Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_washout_days", "N washout days")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "total_abx_days_prescreen", "N days of pre-study Abx (month prior)")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "abx_screen_status", "Total days of Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Total Days of Abx", "N days of non-CDI Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "treat day len abx", "N days of SoC CDI Abx")
my_patterns <-  c("Abx", "abx", "Age", "BMI" , "Vanco", "total recurrences", "washout" )
ord1 <- c( "Cytokines","BA" ,"SCFA","Species","Genus", "Order",  "Class" ,"Clinical factor" )
ord2 <- c("Clinical factor" , "Class" , "Order" ,"Genus","Species" ,"SCFA","BA", "Cytokines")
imp_rf <- imp_rf %>%
mutate(dataset_factor = factor(if_else(grepl( paste(my_patterns, collapse='|'), variable), "Clinical factor", dataset ), levels = ord1  ) ) %>%  arrange(dataset_factor) %>%
group_by(Species, variable) %>%
filter(mean_AUC == max(mean_AUC)) %>%
ungroup() %>%
filter(Freq > 0.2) %>%
mutate(variable = fct_inorder(factor(variable, ordered=TRUE))) %>%
mutate(Freq_sgn = (if_else( (mean_diff < 0) , -1*Freq, Freq ) ) )  %>%
filter(!grepl("mycetes", clean_names)) %>%
filter(!grepl("VE303", clean_names)) %>%
filter(!grepl("uncl", clean_names))
imp_rf <- imp_rf %>%
mutate(variable = if_else(dataset_factor == "Cytokines",
str_replace_all(imp_rf$variable, " ", "-") ,
str_replace_all(imp_rf$variable, "_", " ") ) ) %>% filter(variable != "G-CSF")
imp_rf$variable <- str_replace_all(imp_rf$variable, "TGF-b", "TGF-\u03B2")
imp_rf$variable <- str_replace_all(imp_rf$variable, "MIP-1d", "MIP-1\u03B4")
Encoding(imp_rf$variable) <- "UTF-8"
textsize = 16
ggp <- ggplot(imp_rf , aes(Species, variable,fill = Freq_sgn, group = dataset_factor, color = dir )) +
theme_classic() +                               # Create heatmap with ggplot2
geom_tile(color = "black",
lwd = 0.2,
linetype = 1) +
scale_fill_gradient2(low = "indianred2",mid = "white" , high = "cyan3", midpoint = 0)   +
theme(axis.text.x = element_text(size = 16,hjust = 1, vjust = 1,  angle = 45),
axis.title.x = element_text(size = textsize +3 ),
plot.title = element_text(size = textsize ),
axis.text.y = element_text(size = 16, hjust = 1, vjust =0.5) ,
axis.title.y = element_text(size = textsize+3, hjust = 0.5, vjust = 1),
strip.text.y = element_blank(),
legend.title = element_text(size = 13),
panel.background = element_rect(colour = "black", size=0.2, fill=NA)) +
facet_grid(rows = vars(imp_rf$dataset_factor),  scales = "free", space = "free_y") +
#  facet_grid(rows = vars(imp_rf$dataset_factor),
#             cols = vars(imp_rf$Species),  scales = "free", space = "free_y") +
scale_x_discrete(expand = expansion(add = c(0,0))) +
scale_y_discrete(expand = expansion(add = c(0,0))) +
labs(y="", x="Strain ID" , fill="Relation" )
#+   coord_fixed()
ggsave(filename = here(results, paste(Sys.Date(), "AUC =" ,auc_thresh,
"RF Colonization  heatmap vert.png",
sep = " ")), width = 12, height = 14.5, dpi = 800)
textanno <-  c("Clinical factors" , "Class" , "Order" ,"Genus","Species" ,"SCFA","Bile Acids", "Cytokines")
#install.packages('ggplot2', dependencies = TRUE)
library(sunburstR)
library(openxlsx)
library(RColorBrewer)
library(tidyverse)
library(vegan)
library(here)
library(ggrepel)
library(ggpubr)
library(scales)
library(dplyr)
library(patchwork)
library(plotly)
library(ggplot2)
source("colors.R") #source colors
sessionInfo()
here()
results <- paste(Sys.Date(), "Figure 2_heatmap", sep = "_")
dir.create(here(results), showWarnings = TRUE)
## Import RF colonization models importance per feature
importance_rf = read_csv(here("Imp_vars_models_colonization_2023-08-18.csv"))
## Import RF colonization models validation AUC
auc_rf = read_csv(here("Performance_colonization_2023-08-18.csv")) %>% select(Species, dataset, mean) %>%
rename(mean_AUC = mean)
auc_thresh <- 0.5
imp_rf <- importance_rf %>% left_join(auc_rf, by = c("Species", "dataset") ) %>%
filter(mean_AUC > auc_thresh | mean_AUC == auc_thresh) %>%
select(-variable) %>%
mutate(variable = clean_names_cyto)
#imp_rf$Species <- str_replace_all(imp_rf$Species, "VE303-", "VE303.")
imp_rf$dataset <- str_replace_all(imp_rf$dataset, "Mic_", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "_Screening", "")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Abx.group", "Use of Vanco")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "N days of most recent Abx", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "days_on_study_ABX_pre_screen", "N days of pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "total_pre_screen_dose", "Dose pre-screen Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_pretreatment_events", "N rounds of non-CDI Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "n_washout_days", "N washout days")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "total_abx_days_prescreen", "N days of pre-study Abx (month prior)")
#imp_rf$variable <- str_replace_all(imp_rf$variable, "abx_screen_status", "Total days of Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "Total Days of Abx", "N days of non-CDI Abx")
imp_rf$variable <- str_replace_all(imp_rf$variable, "treat day len abx", "N days of SoC CDI Abx")
my_patterns <-  c("Abx", "abx", "Age", "BMI" , "Vanco", "total recurrences", "washout" )
ord1 <- c( "Cytokines","BA" ,"SCFA","Species","Genus", "Order",  "Class" ,"Clinical factor" )
ord2 <- c("Clinical factor" , "Class" , "Order" ,"Genus","Species" ,"SCFA","BA", "Cytokines")
imp_rf <- imp_rf %>%
mutate(dataset_factor = factor(if_else(grepl( paste(my_patterns, collapse='|'), variable), "Clinical factor", dataset ), levels = ord1  ) ) %>%  arrange(dataset_factor) %>%
group_by(Species, variable) %>%
filter(mean_AUC == max(mean_AUC)) %>%
ungroup() %>%
filter(Freq > 0.2) %>%
mutate(variable = fct_inorder(factor(variable, ordered=TRUE))) %>%
mutate(Freq_sgn = (if_else( (mean_diff < 0) , -1*Freq, Freq ) ) )  %>%
filter(!grepl("mycetes", clean_names)) %>%
filter(!grepl("VE303", clean_names)) %>%
filter(!grepl("uncl", clean_names))
imp_rf <- imp_rf %>%
mutate(variable = if_else(dataset_factor == "Cytokines",
str_replace_all(imp_rf$variable, " ", "-") ,
str_replace_all(imp_rf$variable, "_", " ") ) ) %>% filter(variable != "G-CSF")
imp_rf$variable <- str_replace_all(imp_rf$variable, "TGF-b", "TGF-\u03B2")
imp_rf$variable <- str_replace_all(imp_rf$variable, "MIP-1d", "MIP-1\u03B4")
Encoding(imp_rf$variable) <- "UTF-8"
textsize = 16
ggp <- ggplot(imp_rf , aes(Species, variable,fill = Freq_sgn, group = dataset_factor, color = dir )) +
theme_classic() +                               # Create heatmap with ggplot2
geom_tile(color = "black",
lwd = 0.2,
linetype = 1) +
scale_fill_gradient2(low = "indianred2",mid = "white" , high = "cyan3", midpoint = 0)   +
theme(axis.text.x = element_text(size = 16,hjust = 1, vjust = 1,  angle = 45),
axis.title.x = element_text(size = textsize +3 ),
plot.title = element_text(size = textsize ),
axis.text.y = element_text(size = 16, hjust = 1, vjust =0.5) ,
axis.title.y = element_text(size = textsize+3, hjust = 0.5, vjust = 1),
strip.text.y = element_blank(),
legend.title = element_text(size = 13),
panel.background = element_rect(colour = "black", size=0.2, fill=NA)) +
facet_grid(rows = vars(imp_rf$dataset_factor),  scales = "free", space = "free_y") +
#  facet_grid(rows = vars(imp_rf$dataset_factor),
#             cols = vars(imp_rf$Species),  scales = "free", space = "free_y") +
scale_x_discrete(expand = expansion(add = c(0,0))) +
scale_y_discrete(expand = expansion(add = c(0,0))) +
labs(y="", x="Strain ID" , fill="Relation" )
#+   coord_fixed()
ggsave(filename = here(results, paste(Sys.Date(), "AUC =" ,auc_thresh,
"RF Colonization  heatmap vert.png",
sep = " ")), width = 12, height = 14.5, dpi = 800)
textanno <-  c("Clinical factors" , "Class" , "Order" ,"Genus","Species" ,"SCFA","Bile Acids", "Cytokines")
